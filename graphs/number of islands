class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        if not grid or not grid[0]:
            return 0
        islands = 0
        visit = set()
        rows = len(grid)
        column = len(grid[0])
        def dfs(row,col):
            if (
            row not in range(rows) 
            or col not in range(column) 
            or grid[row][col] == "0" 
            or (row,col) in visit
            ):
                return 
            visit.add((row,col))
            directions = [[0, 1], [0, -1], [1, 0], [-1, 0]]
            for dr, dc in directions:
                dfs(row+dr,col+dc)
            
        for r in range(rows):
            for c in range(column):
                if grid[r][c] == "1" and grid[r][c] not in visit:
                    islands += 1
                    dfs(r,c)
        return islands
